const fs = require('fs');

const heroAttackTable = {
  '勇者': [
    '斬撃',
    'パワースラッシュ',
    'ブレイブクロス',
    'オーラブレード',
    'ライジングセイバー',
    'ドラゴンクレスト',
    'カオスブレイカー',
    'ホーリーブレード',
    'アルティメットソード',
    'レジェンドフィニッシュ'
  ],
  '戦士': [
    '一撃打ち',
    'ハンマーブロー',
    'ダブルインパクト',
    'バーストクラッシュ',
    '激震烈破',
    '獅子奮迅',
    'ウォークライクレイヴ',
    'バーサーカーラッシュ',
    'ギガクラッシャー',
    'アースクラッカー'
  ],
  '僧侶': [
    'ヒールスマイト',
    'セイクリッドブロー',
    'ホーリーライト',
    'ジャッジメント',
    'ディバインスマッシュ',
    '聖光裂破',
    'セラフィムストライク',
    'アークインパルス',
    'ラグナロクガード',
    'ゴッドレクイエム'
  ],
  '魔法使い': [
    'ファイアボルト',
    'アイススパイク',
    'ライトニング',
    'フレイムランス',
    'ストームブラスト',
    'フレアバースト',
    'メテオストライク',
    'ギガサンダー',
    'アストラルゲート',
    'アルティメットスペル'
  ]
};

const monsterAttackTable = {
  'スライム族': [
    '体当たり', '粘液飛ばし', 'とろける触手',
    'ぬるぬる連打', 'スライムボム', '腐食スプラッシュ',
    'アシッドブレイク', '粘塊崩壊', 'ゲルデストロイ', 'キングスライムクラッシュ'
  ],
  '獣族': [
    '噛みつき', '爪ひっかき', '突進', '牙連撃', '咆哮',
    '地獄牙', '狂乱乱舞', '破滅クロー', '獣王烈爪', '闇炎咆哮'
  ],
  '植物族': [
    'つる攻撃', '胞子飛ばし', '根っこ締め付け', '吸血花', '寄生蔓',
    '絞殺花嵐', 'トゲトゲ狂宴', '捕食の華', '樹海崩壊', '世界樹の裁き'
  ],
  '昆虫族': [
    '突刺し', '硬殻ぶつかり', '毒針攻撃', '羽音斬り', '大顎クラッシュ',
    '毒牙連撃', '甲殻粉砕', '獣喰いバイト', '悪夢羽ばたき', '皇帝穿孔'
  ],
  'アンデッド族': [
    '骨打ち', '呪いの吐息', '腐敗タッチ', '魂吸い', '地獄の手招き',
    '亡者の咆哮', '血塗れの鎌', '死者の舞踏', '冥界の解放', '終末の鎮魂歌'
  ],
  '魔族': [
    '影の爪', 'ダークボルト', 'ファイアブレス', '地獄の炎', '闇の衝撃',
    '悪魔の微笑', '魔王の従者', '虚無の波動', '深淵の咆哮', '魔界終焉斬'
  ]
};

function heroLines(job, idx) {
  const phrases = {
    '勇者': [
      ['これが正義の刃だ', '行くぞ', '俺が切り開く', '皆を守る', '力を合わせて'],
      ['今こそ決める時', '心を燃やす', '俺たちの勝利を', '使命を果たす', '諦めるな'],
      ['突き進め', '最後まで戦う', '勇気を示せ', '希望をつなげ', '全力で行く']
    ],
    '戦士': [
      ['喰らえ', '受けてみろ', '逃がさん', '止めてみろ', '粉砕してやる'],
      ['俺の渾身の一撃', 'オレの力', 'これが戦士の意地', '重さを知れ', '力比べだ'],
      ['砕け散れ', 'ぶっ飛べ', '骨まで砕く', '地に伏せ', '消し飛べ']
    ],
    '僧侶': [
      ['神の御名において', '祈りの力よ', '聖なる光を', '迷える魂よ', '祝福を受けよ'],
      ['清めの一撃', '怒りを鎮めよ', '聖裁を下す', '光の加護を', '罪を悔い改めよ'],
      ['救済の道へ', '浄化せよ', '慈悲の光を', '聖域に還れ', '天の裁きを']
    ],
    '魔法使い': [
      ['見せてやろう', '計算通り', '愚か者め', 'これが魔力だ', 'さあ始めるぞ'],
      ['逃れられぬ', '抗えまい', '封じてみせる', '魂まで焼き尽くす', '知識の結晶'],
      ['静かに消えろ', '跪け', '思い知るがいい', '無駄な抵抗はやめろ', '崩れ去れ']
    ]
  };
  const p = phrases[job];
  const l1 = p[0][idx % p[0].length];
  const l2 = p[1][idx % p[1].length];
  const l3 = p[2][idx % p[2].length];
  return [
    `${l1}！{name}！`,
    `${l2}、{name}！`,
    `${l3}！{name}！！`
  ];
}

function monsterLines(species, tier) {
  const lines = {
    'スライム族': {
      '下位': [
        'ぷるんといくよ、{name}～。',
        'ぺたぺたと攻めちゃう！{name}！'
      ],
      '中位': [
        'ヌメヌメ倍増！{name}！',
        'とろとろ攻撃、受けてみる？{name}～'
      ],
      '上位': [
        'キングの風格！{name}！！',
        '全部とけちゃえ！{name}！'
      ]
    },
    '獣族': {
      '下位': [
        'ガウッ！{name}だ！',
        '牙を食らえ！{name}！'
      ],
      '中位': [
        '狩りの時間だ！{name}！！',
        '本能がうずく！{name}で裂いてやる！'
      ],
      '上位': [
        '王の咆哮！{name}！！',
        '獣の頂点が吠える！{name}！'
      ]
    },
    '植物族': {
      '下位': [
        '静かに絡め取る…{name}。',
        '芽生えの力…{name}。'
      ],
      '中位': [
        '蔓よ、絡め！{name}！',
        '胞子が舞う…{name}。'
      ],
      '上位': [
        '大地の怒りを知れ！{name}！！',
        '森が裁く…{name}！'
      ]
    },
    '昆虫族': {
      '下位': [
        'チチチ…{name}！',
        'カサカサっと決める！{name}！'
      ],
      '中位': [
        '素早さを見せてやる！{name}！！',
        '硬い殻で貫く！{name}！'
      ],
      '上位': [
        '我が翅の王たる一撃！{name}！！',
        '殲滅する…{name}！'
      ]
    },
    'アンデッド族': {
      '下位': [
        '朽ち果てよ…{name}…',
        '闇より来たる…{name}'
      ],
      '中位': [
        '滅びを味わえ…{name}…',
        '命を刈り取る…{name}'
      ],
      '上位': [
        '冥界へ還れ…{name}！',
        '絶望を抱け…{name}！！'
      ]
    },
    '魔族': {
      '下位': [
        'ひれ伏せ、{name}！',
        '無駄だ、{name}！'
      ],
      '中位': [
        'これが闇の力だ！{name}！',
        '恐怖を刻もう、{name}！'
      ],
      '上位': [
        '我が覇道を阻むな！{name}！！',
        '絶望せよ、{name}！！！'
      ]
    }
  };
  return lines[species][tier];
}

const result = { heroes: {}, monsters: {} };

Object.keys(heroAttackTable).forEach(job => {
  result.heroes[job] = {};
  heroAttackTable[job].forEach((attack, idx) => {
    result.heroes[job][attack] = heroLines(job, idx);
  });
});

Object.keys(monsterAttackTable).forEach(species => {
  result.monsters[species] = { '下位': {}, '中位': {}, '上位': {} };
  monsterAttackTable[species].forEach((attack, idx) => {
    const tier = idx < 3 ? '下位' : idx < 6 ? '中位' : '上位';
    result.monsters[species][tier][attack] = monsterLines(species, tier);
  });
});

fs.writeFileSync('data/skill_lines.json', JSON.stringify(result, null, 2));

